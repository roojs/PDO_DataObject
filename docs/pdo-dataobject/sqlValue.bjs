{
    "name": "sqlValue",
    "parent": "",
    "title": "",
    "permname": "",
    "modOrder": "001",
    "items": [
        {
            "name": "sqlValue",
            "purpose": " Factory method for calling PDO_DataObject_Cast",
            "stype": "function",
            "|xns": "Roo.doc",
            "xtype": "Entry",
            "items": [
                {
                    "name": "sqlValue",
                    "is_static": true,
                    "is_constructor": false,
                    "memberof": "PDO_DataObject",
                    "returndesc": "",
                    "returntype": "PDO_DataObject_Cast",
                    "|xns": "Roo.doc",
                    "xtype": "Synopsis",
                    "items": [
                        {
                            "desc": "(or type if used with 2 arguments)",
                            "is_optional": false,
                            "name": "$value",
                            "type": "string",
                            "|xns": "Roo.doc",
                            "xtype": "Param"
                        },
                        {
                            "desc": "(optional) used with date\/null etc..",
                            "is_optional": false,
                            "name": "",
                            "type": "string",
                            "|xns": "Roo.doc",
                            "xtype": "Param"
                        }
                    ]
                },
                {
                    "stype": "desc",
                    "|xns": "Roo.doc",
                    "xtype": "Section",
                    "items": [
                        {
                            "html": " Cast Objects represent database values, that can not be represented using simple PHP types,\n\n For example RAW sql calls like `NOW()` or database methods or database `'NULL'`\n\n if used with 1 argument `PDO_DataObject_Cast::sql($value)` is called\n\n if used with 2 arguments `PDO_DataObject_Cast::$value($callvalue)` is called\n valid first arguments are: blob, string, date, sql\n\n usage:\n ```\n $member->updated = $member->sqlValue('NOW()');\n $member->blob_data = $member->sqlValue('some_file_location', 'blob');\n ```\n\n\n",
                            "|xns": "Roo.doc",
                            "xtype": "Para"
                        }
                    ]
                },
                {
                    "stype": "parameter",
                    "|xns": "Roo.doc",
                    "xtype": "Section"
                },
                {
                    "stype": "return",
                    "|xns": "Roo.doc",
                    "xtype": "Section"
                }
            ]
        }
    ]
}